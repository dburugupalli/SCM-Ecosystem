/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ProductManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.ProductDepartment;
import Business.Organization.QualityDepartment;
import Business.Product.Product;
import Business.Product.ProductList;
import Business.UserAccount.UserAccount;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


import Business.WorkQueue.ProductTestRequest;

import java.awt.CardLayout;
import javax.swing.JOptionPane;

import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class ProductInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProductInventoryJPanel
     */
    private JPanel userProcessContainer;
    private ProductDepartment organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;
    
    private ProductList prodList;
    public ProductInventoryJPanel(JPanel userProcessContainer,UserAccount userAccount,ProductDepartment organization,Enterprise enterprise,EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.system = system;
        valueLabel.setText(enterprise.getName());
        populateProductTable();
        
    }
    
    public void populateProductTable(){
        DefaultTableModel model = (DefaultTableModel) tblProductList.getModel();
        
        model.setRowCount(0);
        //Product prod = null ;
        
         for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof ProductDepartment){
                for(Product prod:((ProductDepartment) organization).getProdList().getProductList()){
                    
                    Object[] row = new Object[7];
                row[0] = prod.getProductId();
                row[1] = prod.getProductName();
                row[2] = prod.getProductPrice();
                 row[3] = prod.getQuantity();
                  row[4] = prod.getMfd_Date();
                row[5] = prod.getProductCategory();
               
               
                row[6] = prod.getQualityChecktatus();
                 model.addRow(row);
                  
                    
                }
            }
        }
       

               
           
        
        
    }
    
     public void populateMaxLimitTable() {
          DefaultTableModel model = (DefaultTableModel) maxLimitTable.getModel();
        
        model.setRowCount(0);
      for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof ProductDepartment){
                for(Product prod:((ProductDepartment) organization).getProdList().getProductList()){
                     if(prod.getQuantity() > prod.getMaxLimit()|| prod.getQuantity() < prod.getMinLimit()){      
                        Object[] row = new Object[8];
                        row[0] = prod.getProductId();
                        row[1] = prod.getProductName();
                        row[2] = prod.getProductPrice();
                        row[3] = prod.getQuantity();
                        row[4] = prod.getMfd_Date();
                        row[5] = prod.getProductCategory();
                         row[6] = prod.getQualityChecktatus();
                         System.out.println(prod.getMaxLimit());
                           if(prod.getQuantity() > prod.getMaxLimit()){
                                row[7] = "Stop the Production";
                            }else {
                                  row[7] = "Start the Production";
                            }
                            
                          model.addRow(row);
                    }
                }
            }
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductList = new javax.swing.JTable();
        lblProductName = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        lblUnitPrice = new javax.swing.JLabel();
        txtUnitPrice = new javax.swing.JTextField();
        lblQuantity = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnCreateProd = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        lblQuantity1 = new javax.swing.JLabel();
        txtCategory = new javax.swing.JTextField();
        valueLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        maxLimitTable = new javax.swing.JTable();
        CheckInventory = new javax.swing.JButton();

        tblProductList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Product Id", "Product Name", "Unit Price", "Quantity", "Mfd Date", "Category", "Quality Check Status"
            }
        ));
        tblProductList.setRowHeight(24);
        jScrollPane1.setViewportView(tblProductList);

        lblProductName.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        lblProductName.setText("Product Name");

        txtProductName.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N

        lblUnitPrice.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        lblUnitPrice.setText("Unit Price");

        txtUnitPrice.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        txtUnitPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnitPriceActionPerformed(evt);
            }
        });

        lblQuantity.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        lblQuantity.setText("Quantity");

        txtQuantity.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N

        btnCreateProd.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        btnCreateProd.setText("Create Product");
        btnCreateProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateProdActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        jButton3.setText("<<back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        lblQuantity1.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        lblQuantity1.setText("Category");

        txtCategory.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N

        valueLabel.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        valueLabel.setText("<Enterprise Name>");

        maxLimitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Product Id", "Product Name", "Unit Price", "Quantity", "Mfd Date", "Category", "Quality Check Status", "ProductionStatus"
            }
        ));
        maxLimitTable.setRowHeight(24);
        jScrollPane2.setViewportView(maxLimitTable);

        CheckInventory.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        CheckInventory.setText("CheckInventoryStatus");
        CheckInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckInventoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(236, 236, 236)
                            .addComponent(lblUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUnitPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                .addComponent(txtQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                .addComponent(txtCategory)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(229, 229, 229)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton3)
                                        .addComponent(lblQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblQuantity1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(37, 37, 37))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(lblProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnCreateProd)
                                .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(224, 224, 224)
                            .addComponent(valueLabel))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(297, 297, 297)
                            .addComponent(CheckInventory))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(62, 62, 62)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(829, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(valueLabel)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuantity1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateProd)
                    .addComponent(jButton3))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CheckInventory)
                .addContainerGap(189, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateProdActionPerformed
        // TODO add your handling code here:
        
          String name = txtProductName.getText();
            boolean productNameFound = false;
          for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof ProductDepartment){ 
                for(Product prod:((ProductDepartment) organization).getProdList().getProductList()){
                    System.out.println(" " + prod.getProductName());
                    //System.out.println(name);
                    if(prod.getProductName().equals(name)) {
                       JOptionPane.showMessageDialog(null, "it is having the same name");
                       productNameFound = true;
                       return ;
                    }
                }
            }
          }
          int price = Integer.parseInt(txtUnitPrice.getText());
          String cat = txtCategory.getText();
          int quant = Integer.parseInt(txtQuantity.getText());
          String status = "Sent for Quality Check";
          String prodId =pid();
          System.out.println("pri generated"+prodId);
          
          ProductTestRequest request = new ProductTestRequest();
          
          
          
          
          
          System.out.println(enterprise.getOrganizationDirectory().getOrganizationList()+"-----");
        

        
        
        for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof ProductDepartment){
                System.out.println(organization.toString());
                
                Product p = ((ProductDepartment) organization).getProdList().createProduct(name, price, quant, cat, status,prodId);
                System.out.println("saved");
                
                prodId = p.getProductId();
                
                

        
       
               
                    
//                    prod.setProductName(txtProductName.getText());
//        prod.setProductPrice(Integer.parseInt(txtUnitPrice.getText()));
//        prod.setProductCategory(txtCategory.getText());
//        prod.setQuantity(Integer.parseInt(txtQuantity.getText()));
//        prod.setQualityChecktatus("Sent for Quality Check");
                    
                
            }
        }
        
        request.setMessage("Test product with Id -"+prodId);
        request.setSender(userAccount);
        request.setStatus("Sent to quality team");
        request.setProductId(prodId);
        Organization org = null;
        for (Organization organ : enterprise.getOrganizationDirectory().getOrganizationList()){
            
            System.out.println(organ.toString());
            if (organ instanceof QualityDepartment){
                org = organ;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
        
        
//        Product prod = organization.getProdList().createProduct();
//        
//        prod.setProductName(txtProductName.getText());
//        prod.setProductPrice(Integer.parseInt(txtUnitPrice.getText()));
//        prod.setProductCategory(txtCategory.getText());
//        prod.setQuantity(Integer.parseInt(txtQuantity.getText()));
//        prod.setQualityChecktatus("Sent for Quality Check");
//        System.out.println(prod.toString());
//        System.out.println(organization.getProdList().toString());
        //prodList.getProductList().add(prod);
        populateProductTable();
        
        
        

        
    }//GEN-LAST:event_btnCreateProdActionPerformed
    
    public String pid(){
       int currentCount=0;
        for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof ProductDepartment){
                
                 currentCount= ((ProductDepartment) organization).getProdList().getProductList().size();
                 
                  
                    
                
            }
        }
        System.out.println(currentCount);
        
        return "prod"+(currentCount+1);
}


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("ProductMangerWorkAreaJPanel", new ProductManagerWorkAreaJPanel(userProcessContainer, userAccount, organization,  enterprise, system));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void CheckInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckInventoryActionPerformed
       populateMaxLimitTable();
        // TODO add your handling code here:
    }//GEN-LAST:event_CheckInventoryActionPerformed

    private void txtUnitPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnitPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnitPriceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CheckInventory;
    private javax.swing.JButton btnCreateProd;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblQuantity1;
    private javax.swing.JLabel lblUnitPrice;
    private javax.swing.JTable maxLimitTable;
    private javax.swing.JTable tblProductList;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtUnitPrice;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
